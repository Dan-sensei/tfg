// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model TFG {
  id Int @id @default(autoincrement())
  thumbnail String
  banner String
  title String
  description String @default("")
  
  author String
  tutor String
  content String
  pages Int
  documentLink String
  tags String[]

  views Int @default(0)
  score Float @default(0)
  scoredTimes Int @default(0)

  category Category @relation(fields: [categoryId], references: [id])
  categoryId Int

  grademaster GradeMaster @relation(fields: [gradeId], references: [id])
  gradeId Int

  createdAt DateTime @default(now())

  dailViews DailyTFGView[]
  voteLogs VoteLog[]
}

model defenseDate {
  id Int @id @default(autoincrement())
  title String
  author String
  date DateTime
  ubication String
}

model GradeMaster{
  id Int @id @default(autoincrement())
  name String
  
  tfgs TFG[]

  college College @relation(fields: [collegeId], references: [id])
  collegeId Int
}

model College{
  id Int @id @default(autoincrement())
  name String
  createdAt DateTime @default(now())
  gradeMaster GradeMaster[]
}

model Category{
  id Int @id @default(autoincrement())
  name String

  tfgs TFG[]
}

model DailyTFGView {
  id          Int      @id @default(autoincrement())
  tfgId       Int
  views       Int      @default(0)
  date        DateTime @default(now())

  tfg         TFG      @relation(fields: [tfgId], references: [id])

  @@unique([tfgId, date])
}

model VoteLog {
  id Int @id @default(autoincrement())
  tfgId Int
  ip String
  createdAt DateTime @default(now())

  tfg TFG @relation(fields: [tfgId], references: [id])
}